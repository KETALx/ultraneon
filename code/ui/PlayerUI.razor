@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
    <div class="vitals">
        <div class="health">
            <div class="icon">add_box</div>
            <div class="value">
                <p>@player?.health</p>
            </div>

        </div>
    </div>

    <div class="hotbar">

        <div class="items"@ref="itemPanels[0]" >1</div>
        <div class="items" @ref="itemPanels[1]">2</div>
        <div class="items" @ref="itemPanels[2]">3</div>
        <div class="items" @ref="itemPanels[3]">4</div>
    </div>

    <div class="crosshair">
        x
    </div>
</root>

@code
{

    [Property] PlayerEntity player { get; set; }
    [Property] PlayerInventory inventory { get; set; }

    Panel[] itemPanels = new Panel[4];

    protected override void OnUpdate()
    {
        base.OnUpdate();

        setActiveStyle(0);
        setActiveStyle(1);
        setActiveStyle(2);
        setActiveStyle(3);

        
    }

    void setActiveStyle(int i)
    {
        if (inventory?.weapons[i] is not null)
        {
            itemPanels[i].Style.BackgroundColor = new Color(0.8f, 1f, 0.8f, 0.2f);
        }
    }

    protected override int BuildHash()
    {
        player = Scene.GetAllComponents<PlayerEntity>().Where(x => !x.IsProxy).FirstOrDefault();
        inventory = player.GameObject.Components.Get<PlayerInventory>();
        
        return player.IsValid()? System.HashCode.Combine(player.health) : 0;
    }
}
