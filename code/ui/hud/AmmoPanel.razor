@using Sandbox.UI
@inherits Panel
@namespace Ultraneon.UI
@attribute [StyleSheet]

<root>
	<div class="ammo-display @( IsReloading ? "reloading" : "" )">
		<div class="current-ammo @( IsEmpty ? "empty" : "" ) @( IsLowWarning ? "low-warning" : "" )">@CurrentAmmo</div>
		<div class="ammo-separator">/</div>
		<div class="max-ammo">@MaxAmmo</div>
	</div>
</root>

@code
{
	[Property]
	public WeaponBaseNeon Weapon { get; set; }

	public int CurrentAmmo { get; set; }
	public int MaxAmmo { get; set; }
	public bool IsReloading { get; set; }
	public bool IsLowWarning { get; set; }
	public bool IsEmpty { get; set; }

	public override void Tick()
	{
		if ( Weapon == null )
		{
			CurrentAmmo = -1;
			MaxAmmo = -1;
			return;
		}

		CurrentAmmo = Weapon.CurrentAmmo;
		MaxAmmo = Weapon.ClipSize;
		IsReloading = Weapon.IsReloading;
		IsEmpty = Weapon.CurrentAmmo <= 0;
		IsLowWarning = CurrentAmmo <= MaxAmmo / 3;

		StateHasChanged(); // FIXME: HACK: We shouldn't need to call this manually. We are consuming one state change too late for some reason
	}

	protected override int BuildHash()
	{
		if ( !Weapon.IsValid() ) return 0;

		var hash = System.HashCode.Combine(
			Weapon.CurrentAmmo,
			Weapon.ClipSize,
			Weapon.WeaponType
		);

		return hash;
	}
}
